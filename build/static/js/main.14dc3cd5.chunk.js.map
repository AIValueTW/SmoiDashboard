{"version":3,"sources":["app/layout/_core/MaterialThemeProvider .js","app/modules/_redux/DashboardCrud.js","app/modules/_redux/DashboardSlice.js","app/modules/_redux/DashboardActions.js","app/Charts/Mui/TitleTypography.js","app/Charts/Nivo/PieChart.js","app/Charts/Mui/MuiCard.js","app/Charts/Apexchart/BarChartYaxisOutSide.js","app/pages/overviewPage/components/NFTRichDataGrid.js","app/components/toTenThousand.js","app/pages/overviewPage/OverviewPage.js","app/pages/proportionPage/components/CollectionDataGrid.js","app/pages/proportionPage/components/ETHDataGrid.js","app/components/MuiAutocomplete.js","app/pages/proportionPage/NFTProportionPage.js","app/pages/currencyPage/components/CryptoDataGrid.js","app/pages/currencyPage/CurrencyPage.js","app/layout/components/Layout.js","app/modules/redux/rootReducer.js","app/modules/redux/store.js","reportWebVitals.js","index.js"],"names":["theme","createTheme","components","MuiAppBar","defaultProps","enableColorOnDark","MuiCssBaseline","styleOverrides","body","darkScrollbar","fontSize","palette","mode","background","default","primary","main","secondary","contrastThreshold","tonalOffset","props","MuiButtonBase","disableRipple","MuiPopover","elevation","zhTW","MaterialThemeProvider","children","ThemeProvider","ip","initialDashboardState","actionsLoading","gender_ratio","undefined","city_ratio","card_data","collection_ranking","member_ranking_by_total_usd","member_nft_value","member_ranking_by_holding_nfts","nft_member_list","someone_collections","someone_collection_items","crypto_member_list","member_ranking_by_holding_crypto","crypto_ranking","someone_crypto_usd","member_crypto_value","DashboardSlice","createSlice","name","initialState","reducers","set_gender_ratio","state","action","payload","set_city_ratio","set_card_data","set_collection_ranking","set_member_ranking_by_total_usd","set_member_nft_value","set_member_ranking_by_holding_nfts","set_nft_member_list","set_someone_collections","set_someone_collection_items","set_crypto_member_list","set_member_ranking_by_holding_crypto","set_crypto_ranking","set_someone_crypto_usd","set_member_crypto_value","actions","get_gender_ratio","dispatch","axios","get","then","res","DashboardData","data","catch","err","console","log","get_city_ratio","get_card_data","get_collection_ranking","get_member_ranking_by_total_usd","get_member_nft_value","member_id","dashboardAPI","get_member_ranking_by_holding_nfts","get_nft_member_list","member_list","get_someone_collections","get_someone_collection_items","collection","get_crypto_member_list","get_member_ranking_by_holding_crypto","get_crypto_ranking","get_someone_crypto_usd","get_member_crypto_value","TitleTypography","title","titleColors","Title","styled","Typography","style","textAlign","padding","PieChart","colors","height","textColor","setValue","useState","id","pieData","setPieData","useEffect","length","value","Box","sortByValue","margin","top","right","bottom","left","innerRadius","activeOuterRadiusOffset","onClick","node","scheme","borderWidth","borderColor","from","modifiers","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLinkLabelsDiagonalLength","arcLinkLabelsStraightLength","arcLabelsRadiusOffset","arcLinkLabelsSkipAngle","arcLabelsSkipAngle","arcLabel","arcLabelsTextColor","enableArcLinkLabels","arcLinkLabel","e","isInteractive","MuiCard","cardColor","titleColor","valueColor","Card","sx","backgroundColor","CardContent","color","fontWeight","BarChartYaxisOutSide","dataName","stacked","distributed","series","setSeries","options","setOptions","categories","setCategories","chartHeight","setChartHeight","getChartHeight","chart","type","toolbar","show","offsetY","events","dataPointSelection","event","chartContext","config","selection","w","xaxis","dataPointIndex","plotOptions","bar","horizontal","columnWidth","endingShape","dataLabels","position","enabled","offsetX","stroke","width","labels","yaxis","fill","opacity","tooltip","y","formatter","val","legend","states","allowMultipleDataPointsSelection","filter","overflow","other","autoHeight","showCellRightBorder","showColumnRightBorder","NFTRichDataGrid","rows","DataGrid","columns","onCellClick","params","ctrlKey","row","nickname","field","headerClassName","headerName","headerAlign","flex","renderCell","toTenThousand","num","toFixed","OverviewPage","setCounty","setGender","setNickName","setCollection","useDispatch","useSelector","dashboard","shallowEqual","Container","maxWidth","Grid","container","spacing","item","xs","Stack","raised","alignItems","count","slice","collectionName","CollectionDataGrid","getRowHeight","info","onCellDoubleClick","url","webside","collectionWebSite","window","open","Avatar","src","collectionImageUrl","m","variant","IconButton","component","ml","ETHDataGrid","itemWebSite","minWidth","overflowX","MuiAutocomplete","inputValue","setInputValue","nickName","memberId","map","push","indexOf","Autocomplete","onChange","newValue","mt","renderInput","TextField","NFTProportionPage","setMemberId","setItem","bgcolor","ethBalance","usd","CryptoDataGrid","imageUrl","symbol","CurrencyPage","Tab","TabUnstyled","buttonUnstyledClasses","focusVisible","tabUnstyledClasses","selected","disabled","TabPanel","TabPanelUnstyled","TabsList","TabsListUnstyled","SimpleTabs","store","TabsUnstyled","defaultValue","CssBaseline","rootSaga","rootReducer","combineReducers","reducer","sagaMiddleware","createSagaMiddleware","middleware","getDefaultMiddleware","immutableCheck","serializableCheck","thunk","configureStore","devTools","process","enhancers","reduxBatch","persistStore","run","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.14dc3cd5.chunk.js","sourcesContent":["import React from \"react\";\r\nimport darkScrollbar from \"@mui/material/darkScrollbar\";\r\nimport { createTheme, ThemeProvider } from \"@mui/material/styles\";\r\nimport { zhTW } from \"@mui/material/locale\";\r\n\r\nconst theme = createTheme(\r\n  /**\r\n   * @see https://mui.com/zh/customization/theming/\r\n   */\r\n  {\r\n    components: {\r\n      MuiAppBar: {\r\n        defaultProps: {\r\n          enableColorOnDark: false,\r\n        },\r\n      },\r\n      MuiCssBaseline: {\r\n        styleOverrides: {\r\n          body: darkScrollbar(),\r\n          fontSize: '1rem',\r\n        },\r\n      },\r\n      \r\n    },\r\n    \r\n    palette: {\r\n      mode: \"dark\",\r\n      background:{\r\n        default:\"#121212\"\r\n      },\r\n      primary: {\r\n        // light: 這將從 palette.primary.main 中進行計算，\r\n        main: \"#25287e\",\r\n        // dark: 這將從 palette.primary.main 中進行計算，\r\n        // contrastText: 這將計算與 palette.primary.main 的對比度\r\n      },\r\n      secondary: {\r\n      //   // light: 這將從 palette.secondary.main 中進行計算，\r\n        main: \"#f08c00\",\r\n      //   // dark: 這將從 palette.secondary.main 中進行計算，\r\n      //   // contrastText: 這將計算與 palette.secondary.main 的對比度\r\n      },\r\n      // 使用 `getContrastText()` 來最大化\r\n      // 背景和文本的對比度\r\n      contrastThreshold: 3,\r\n      // 使用下面的函數用於將顏色的亮度在其調色板中\r\n      // 移動大約兩個指數。\r\n      // 例如，從紅色 500（Red 500）切換到 紅色 300（Red 300）或 紅色 700（Red 700）。\r\n      tonalOffset: 0.2,\r\n    },\r\n\r\n    /**\r\n     * @see https://material-ui.com/customization/globals/#default-props\r\n     */\r\n    props: {\r\n      // Name of the component ⚛️\r\n      MuiButtonBase: {\r\n        // The properties to apply\r\n        disableRipple: false, // No more ripple, on the whole application 💣!\r\n      },\r\n\r\n      // Set default elevation to 1 for popovers.\r\n      MuiPopover: {\r\n        elevation: 1,\r\n      },\r\n    },\r\n    zhTW,\r\n  }\r\n);\r\n\r\nexport function MaterialThemeProvider(props) {\r\n  const { children } = props;\r\n\r\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\r\n}\r\n","import axios from \"axios\";\r\n\r\nconst loginIp = process.env.REACT_APP_SERVER;// 閱讀最外層檔案.env &&development 為本地端啟動 production 為伺服器設定\r\n\r\nconst ip=\"https://samoi.aiv.com.tw/dashboard-api\"\r\n\r\n//總覽\r\nexport const get_gender_ratio = () => {\r\n  let data = axios.get(ip + \"/gender_ratio/\");\r\n  return data;\r\n};\r\n\r\nexport const get_city_ratio = () => {\r\n  let data = axios.get(ip + \"/city_ratio/\");\r\n  return data;\r\n};\r\n\r\nexport const get_card_data = () => {\r\n  let data = axios.get(ip + \"/cards_data/\");\r\n  return data;\r\n};\r\n\r\nexport const get_collection_ranking = () => {\r\n  let data = axios.get(ip + \"/collection_ranking/\");\r\n  return data;\r\n};\r\n\r\nexport const get_member_ranking_by_total_usd = () => {\r\n  let data = axios.get(ip + \"/member_ranking_by_total_usd/\");\r\n  return data;\r\n};\r\n\r\n//NFT占比\r\nexport const get_member_nft_value = (member_id) => {\r\n  let data = axios.get(ip + \"/member_nft_value/?member_id=\"+member_id);\r\n  return data;\r\n};\r\n\r\nexport const get_member_ranking_by_holding_nfts = () => {\r\n  let data = axios.get(ip + \"/member_ranking_by_holding_nfts/\");\r\n  return data;\r\n};\r\n\r\nexport const get_nft_member_list = () => {\r\n  let data = axios.get(ip + \"/nft_member_list/\");\r\n  return data;\r\n};\r\n\r\nexport const get_someone_collections = (member_id) => {\r\n  let data = axios.get(ip + \"/someone_collections/?member_id=\"+member_id);\r\n  return data;\r\n};\r\n\r\nexport const get_someone_collection_items = (member_id,collection) => {\r\n  let data = axios.get(ip + \"/someone_collection_items/?member_id=\"+member_id+\"&collection=\"+collection);\r\n  return data;\r\n};\r\n\r\n//所有幣種\r\nexport const get_crypto_member_list = () => {\r\n  let data = axios.get(ip + \"/crypto_member_list/\");\r\n  return data;\r\n};\r\n\r\nexport const get_member_ranking_by_holding_crypto = () => {\r\n  let data = axios.get(ip + \"/member_ranking_by_holding_crypto/\");\r\n  return data;\r\n};\r\n\r\nexport const get_crypto_ranking = (member_id) => {\r\n  let data = axios.get(ip + \"/crypto_ranking/?member_id=\"+member_id);\r\n  return data;\r\n};\r\n\r\nexport const get_someone_crypto_usd = (member_id) => {\r\n  let data = axios.get(ip + \"/someone_crypto_usd/?member_id=\"+member_id);\r\n  return data;\r\n};\r\n\r\nexport const get_member_crypto_value = (member_id) => {\r\n  let data = axios.get(ip + \"/member_crypto_value/?member_id=\"+member_id);\r\n  return data;\r\n};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialDashboardState = {\r\n  actionsLoading: false,\r\n  //總覽\r\n  gender_ratio: undefined,\r\n  city_ratio: undefined,\r\n  card_data: undefined,\r\n  collection_ranking: undefined,\r\n  member_ranking_by_total_usd: undefined,\r\n  //NFT占比\r\n  member_nft_value:undefined,\r\n  member_ranking_by_holding_nfts: undefined,\r\n  nft_member_list: undefined,\r\n  someone_collections:undefined,\r\n  someone_collection_items:undefined,\r\n  //所有幣種\r\n  crypto_member_list:undefined,\r\n  member_ranking_by_holding_crypto: undefined,\r\n  crypto_ranking: undefined,\r\n  someone_crypto_usd:undefined,\r\n  member_crypto_value:undefined\r\n};\r\nexport const callTypes = {\r\n  action: \"action\",\r\n};\r\n\r\nexport const DashboardSlice = createSlice({\r\n  name: \"dashborad\",\r\n  initialState: initialDashboardState,\r\n  reducers: {\r\n    //總覽\r\n    set_gender_ratio: (state, action) => {\r\n      state.gender_ratio = action.payload.gender_ratio;\r\n    },\r\n    set_city_ratio: (state, action) => {\r\n      state.city_ratio = action.payload.city_ratio;\r\n    },\r\n    set_card_data: (state, action) => {\r\n      state.card_data = action.payload.card_data;\r\n    },\r\n    set_collection_ranking: (state, action) => {\r\n      state.collection_ranking = action.payload.collection_ranking;\r\n    },\r\n    set_member_ranking_by_total_usd: (state, action) => {\r\n      state.member_ranking_by_total_usd = action.payload.member_ranking_by_total_usd;\r\n    },\r\n    //NFT占比\r\n    set_member_nft_value: (state, action) => {\r\n      state.member_nft_value = action.payload.member_nft_value;\r\n    },\r\n    set_member_ranking_by_holding_nfts: (state, action) => {\r\n      state.member_ranking_by_holding_nfts = action.payload.member_ranking_by_holding_nfts;\r\n    },\r\n    set_nft_member_list: (state, action) => {\r\n      state.nft_member_list = action.payload.nft_member_list;\r\n    },\r\n    set_someone_collections: (state, action) => {\r\n      state.someone_collections = action.payload.someone_collections;\r\n    },\r\n    set_someone_collection_items: (state, action) => {\r\n      state.someone_collection_items = action.payload.someone_collection_items;\r\n    },\r\n    //所有幣種\r\n    set_crypto_member_list: (state, action) => {\r\n      state.crypto_member_list = action.payload.crypto_member_list;\r\n    },\r\n    set_member_ranking_by_holding_crypto: (state, action) => {\r\n      state.member_ranking_by_holding_crypto = action.payload.member_ranking_by_holding_crypto;\r\n    },\r\n    set_crypto_ranking: (state, action) => {\r\n      state.crypto_ranking = action.payload.crypto_ranking;\r\n    },\r\n    set_someone_crypto_usd: (state, action) => {\r\n      state.someone_crypto_usd = action.payload.someone_crypto_usd;\r\n    },\r\n    set_member_crypto_value: (state, action) => {\r\n      state.member_crypto_value = action.payload.member_crypto_value;\r\n    },\r\n  },\r\n});\r\n","import * as dashboardAPI from \"./DashboardCrud.js\";\r\nimport { DashboardSlice } from \"./DashboardSlice\";\r\n\r\nconst { actions } = DashboardSlice;\r\n\r\n//總覽\r\nexport const get_gender_ratio = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_gender_ratio()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_gender_ratio({\r\n          gender_ratio: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_city_ratio = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_city_ratio()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_city_ratio({\r\n          city_ratio: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_card_data = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_card_data()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_card_data({\r\n          card_data: DashboardData.data,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_collection_ranking = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_collection_ranking()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_collection_ranking({\r\n          collection_ranking: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_member_ranking_by_total_usd = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_member_ranking_by_total_usd()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_member_ranking_by_total_usd({\r\n          member_ranking_by_total_usd: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//NFT占比\r\nexport const get_member_nft_value = ({member_id}) => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_member_nft_value(member_id)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_member_nft_value({\r\n          member_nft_value: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_member_ranking_by_holding_nfts = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_member_ranking_by_holding_nfts()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_member_ranking_by_holding_nfts({\r\n          member_ranking_by_holding_nfts: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_nft_member_list = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_nft_member_list()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_nft_member_list({\r\n          member_list: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_someone_collections = ({member_id}) => (dispatch) => {\r\n  \r\n  return dashboardAPI\r\n    .get_someone_collections(member_id)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_someone_collections({\r\n          someone_collections: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_someone_collection_items = ({member_id,collection}) => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_someone_collection_items(member_id,collection)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_someone_collection_items({\r\n         someone_collection_items: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\n//所有幣種\r\nexport const get_crypto_member_list = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_crypto_member_list()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_crypto_member_list({\r\n          crypto_member_list: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_member_ranking_by_holding_crypto = () => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_member_ranking_by_holding_crypto()\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_member_ranking_by_holding_crypto({\r\n          member_ranking_by_holding_crypto: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_crypto_ranking = ({member_id}) => (dispatch) => {\r\n  \r\n  return dashboardAPI\r\n    .get_crypto_ranking(member_id)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_crypto_ranking({\r\n          crypto_ranking: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_someone_crypto_usd = ({member_id}) => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_someone_crypto_usd(member_id)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_someone_crypto_usd({\r\n          someone_crypto_usd: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport const get_member_crypto_value = ({member_id}) => (dispatch) => {\r\n  return dashboardAPI\r\n    .get_member_crypto_value(member_id)\r\n    .then((res) => {\r\n      const DashboardData = res.data;\r\n      dispatch(\r\n        actions.set_member_crypto_value({\r\n          member_crypto_value: DashboardData,\r\n        })\r\n      );\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};","import React from \"react\";\r\nimport {Box, Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\n\r\nexport function TitleTypography({title, titleColors }) {\r\n  const Title = styled(Typography)`\r\n  font-size: 1.5vw;\r\n  font-weight: 600;\r\n  color: #fff;\r\n`;\r\n  return (\r\n    <>\r\n      <Box\r\n          style={{\r\n            background: titleColors,\r\n            textAlign:\"center\",\r\n            padding:2\r\n          }}\r\n        >\r\n          <Title>{title}</Title>\r\n        </Box>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport { ResponsivePie } from \"@nivo/pie\";\r\nimport { Box } from \"@mui/system\";\r\nimport { Typography } from \"@mui/material\";\r\nimport { styled } from \"@mui/system\";\r\nimport { TitleTypography } from \"../Mui/TitleTypography\";\r\n\r\nexport function PieChart({ data, title,titleColors, colors, height,textColor ,setValue}) {\r\n  const [pieData, setPieData] = useState([{ id: \"\" }]);\r\n\r\n  useEffect(() => {\r\n    if (data.length) {\r\n      setPieData(data);\r\n    } else {\r\n      setPieData([{ id: \"無資料\", value: 1 }]);\r\n    }\r\n  }, [data]);\r\n\r\n  function OnClickPie(node){\r\n    setValue(node.id)\r\n  }\r\n\r\n  return (\r\n    <>\r\n        {/* <Box\r\n          style={{\r\n            background: \"linear-gradient(to right , #000113, #020f77)\",\r\n            padding: \"4px\",\r\n          }}\r\n        >\r\n          <Title>{title}</Title>\r\n        </Box> */}\r\n        <TitleTypography title={title} titleColors={titleColors}/>\r\n        <Box style={{ height: height}}>\r\n          <ResponsivePie\r\n            data={pieData}\r\n            sortByValue={true}\r\n            margin={{ top: 30, right: 30, bottom: 30, left: 30 }}\r\n            // startAngle={data.length === 1 ? 270 : 0}\r\n            // startAngle={-70}\r\n            // endAngle={-360}\r\n            innerRadius={data.length <= 2 ? 0 : 0}\r\n            activeOuterRadiusOffset={3}\r\n            onClick={OnClickPie}\r\n            colors={\r\n              colors && pieData[0].id !== \"無資料\"\r\n                ? colors\r\n                : pieData[0].id == \"無資料\"\r\n                ? \"#aeaeae\"\r\n                : { scheme: \"purple_orange\" }\r\n            }\r\n            borderWidth={1}\r\n            borderColor={{ from: \"color\", modifiers: [[\"brighter\", 3]] }}\r\n            // arcLinkLabel={function (e) {\r\n            //   return e.id + \"－\" + e.value;\r\n            // }}\r\n            arcLinkLabelsTextColor={{ from: \"color\", modifiers: [] }}\r\n            arcLinkLabelsThickness={2}\r\n            arcLinkLabelsColor={{ from: \"color\" }}\r\n            arcLinkLabelsDiagonalLength={10}\r\n            arcLinkLabelsStraightLength={10}\r\n            arcLabelsRadiusOffset={data.length <= 2 ? 0.5 : 0.58}\r\n            arcLinkLabelsSkipAngle={10}\r\n            arcLabelsSkipAngle={15}\r\n            arcLabel=\"id\"\r\n            arcLabelsTextColor={textColor}\r\n            enableArcLinkLabels={pieData[0].id == \"無資料\" ? false : true}\r\n            arcLinkLabel={function(e){return e.value}}\r\n            theme={\r\n              data.length <= 3\r\n                ? {\r\n                    fontSize: \"1.7vmin\",\r\n                  }\r\n                : {\r\n                    fontSize: \"1.7vmin\",\r\n                  }\r\n            }\r\n            isInteractive={true}\r\n          //   legends={[\r\n          //     {\r\n          //       anchor: 'bottom',\r\n          //       direction: 'row',\r\n          //       justify: false,\r\n          //       translateX: 0,\r\n          //       translateY: 30,\r\n          //       itemsSpacing: 30,\r\n          //       itemWidth: 60,\r\n          //       itemHeight: 10,\r\n          //       itemTextColor: '#999',\r\n          //       itemDirection: 'left-to-right',\r\n          //       itemOpacity: 1,\r\n          //       symbolSize: 15,\r\n          //       symbolShape: 'circle',\r\n          //       effects: [\r\n          //           {\r\n          //               on: 'hover',\r\n          //               style: {\r\n          //                   itemTextColor: '#000'\r\n          //               }\r\n          //           }\r\n          //       ]\r\n          //     }\r\n          // ]}\r\n          />\r\n        </Box>\r\n\r\n    </>\r\n  );\r\n}\r\n","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\n\r\nexport default function MuiCard({height,title,value,cardColor,titleColor,valueColor}) {\r\n  return (\r\n    <Card sx={{ height:height,backgroundColor:cardColor,textAlign:\"center\"}}>\r\n      <CardContent>\r\n        <Typography sx={{ fontSize: \"3.5vmin\",color:titleColor,fontWeight:\"bold\" }} >\r\n         {title}\r\n        </Typography>\r\n        {/* <Typography sx={{fontSize: \"3vmin\"}} color=\"text.secondary\">\r\n          adjective\r\n        </Typography> */}\r\n        <Typography sx={{ fontSize: \"6.5vmin\",color:valueColor }}>\r\n          {value}\r\n        </Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport Chart from \"react-apexcharts\";\r\nimport { TitleTypography } from \"../Mui/TitleTypography\";\r\nimport { Box } from \"@mui/system\";\r\n\r\nfunction getChartHeight(length) {\r\n  var height = 700;\r\n\r\n  if (length < 12) {\r\n    return height;\r\n  } else {\r\n    height = height * (length / 12);\r\n  }\r\n  return height;\r\n}\r\n\r\n\r\nexport function BarChartYaxisOutSide({\r\n  data,\r\n  dataName,\r\n  title,\r\n  titleColors,\r\n  colors,\r\n  height,\r\n  stacked,\r\n  distributed,\r\n  value,\r\n  setValue\r\n}) {\r\n  const [series, setSeries] = useState([]);\r\n  const [options, setOptions] = useState(null);\r\n  const [categories, setCategories] = useState([]);\r\n  const [chartHeight,setChartHeight]= useState()\r\n\r\n  useEffect(() => {\r\n    if (data && data.length) {\r\n      setSeries([{data:data}]);\r\n    }\r\n    if (dataName && dataName.length) {\r\n      setCategories(dataName);\r\n    }\r\n  }, [data, dataName]);\r\n\r\n  useEffect(() => {\r\n    setChartHeight(getChartHeight(categories.length));\r\n  }, [categories.length]);\r\n\r\n  useEffect(() => {\r\n    setOptions({\r\n      chart: {\r\n        type: \"bar\",\r\n        height: 350,\r\n        stacked: stacked,\r\n        toolbar:{\r\n          show:false\r\n        },\r\n        offsetY:-15,\r\n        events: {\r\n          dataPointSelection: function (event, chartContext, config) {\r\n            \r\n            const selection=config.w.config.xaxis.categories[config.dataPointIndex]\r\n            if(selection==value) setValue(\"\")\r\n            else setValue(selection)\r\n            // console.log(selection)\r\n          },\r\n        },\r\n      },\r\n      colors: colors,\r\n      plotOptions: {\r\n        bar: {\r\n          horizontal: true,\r\n          distributed: distributed,\r\n          columnWidth: \"55%\",\r\n          endingShape: \"rounded\",\r\n          dataLabels: {\r\n            position: \"bottom\", // top, center, bottom\r\n          },\r\n        },\r\n      },\r\n      dataLabels: {\r\n        enabled: true,\r\n        // formatter: function (val) {\r\n        //   return (val / 1000000).toFixed(2) + \"百萬\";\r\n        // },\r\n        offsetX: 10,\r\n        style: {\r\n          fontSize: \"18px\",\r\n          colors: [\"#fbf1ff\"],\r\n        },\r\n      },\r\n      // title: {\r\n      //   text: title,\r\n      //   align: 'left'\r\n      // },\r\n      stroke: {\r\n        show: true,\r\n        width: 2,\r\n        colors: [\"transparent\"],\r\n      },\r\n      xaxis: {\r\n        categories: categories,\r\n        labels: {\r\n          style: {\r\n            fontSize: \"18px\",\r\n            colors:\"#fff\",\r\n          },\r\n          offsetY: 5,\r\n        },\r\n      },\r\n      yaxis: {\r\n        labels: {\r\n          style: {\r\n            fontSize: \"18px\",\r\n            colors:\"#fff\"\r\n          },\r\n        },\r\n      },\r\n      fill: {\r\n        opacity: 1,\r\n      },\r\n      tooltip: {\r\n        y: {\r\n          title: {\r\n            formatter: function (val) {\r\n              if (series.length && !series[0].name) return \"\";\r\n              else return val;\r\n            },\r\n          },\r\n        },\r\n      }, \r\n      legend: {\r\n        show: false,\r\n      },\r\n      states: {\r\n        allowMultipleDataPointsSelection: true,\r\n        filter: {\r\n          type: \"darken\",\r\n          value: 1,\r\n        },\r\n      },\r\n    });\r\n  }, [categories]);\r\n\r\n  return (\r\n    <>\r\n      <TitleTypography title={title} titleColors={titleColors} />\r\n      <Box style={{ height: height, overflow:\"auto\" }}>\r\n{options ? (\r\n        <Chart\r\n          options={options}\r\n          series={series}\r\n          type=\"bar\"\r\n          height={chartHeight}\r\n          width={\"99%\"}\r\n        />\r\n      ) : null}\r\n      </Box>\r\n      \r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport {\r\n  randomCreatedDate,\r\n  randomTraderName,\r\n  randomUpdatedDate,\r\n} from \"@mui/x-data-grid-generator\";\r\nimport { TitleTypography } from \"../../../Charts/Mui/TitleTypography\";\r\nimport { Box } from \"@mui/material\";\r\n\r\nconst other = {\r\n  autoHeight: true,\r\n  showCellRightBorder: true,\r\n  showColumnRightBorder: true,\r\n};\r\n\r\nexport function NFTRichDataGrid({ rows, title, titleColors, setValue }) {\r\n  return (\r\n    <>\r\n      <TitleTypography title={title} titleColors={titleColors} />\r\n      <Box\r\n        sx={{\r\n          height: 300,\r\n          width: 1,\r\n          \"& .color-header\": {\r\n            backgroundColor: \"#de5f5f\",\r\n            fontSize: \"2vmin\",\r\n          },\r\n        }}\r\n      >\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          onCellClick={(params, event) => {\r\n            if (!event.ctrlKey) {\r\n              setValue(params.row.nickname);\r\n            }\r\n          }}\r\n          {...other}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    field: \"ranking\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"排名\",\r\n    headerAlign: \"center\",\r\n    type: \"number\",\r\n    flex: 0.2,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ fontSize: \"19px\" }}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"nickname\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"人名\",\r\n    headerAlign: \"center\",\r\n    flex: 1,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{fontSize: \"19px\" }}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"ethBalance\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"以太幣(顆數)\",\r\n    headerAlign: \"center\",\r\n    flex: 0.5,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ fontSize: \"19px\" }}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"ethBalance_usd\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"總價值(美金)\",\r\n    headerAlign: \"center\",\r\n    flex: 0.5,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ fontSize: \"19px\" }}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n// const rows = [\r\n//     { id: 1, col1: 'Hello', col2: 'World',col3:'ETH' },\r\n//     { id: 2, col1: 'DataGridPro', col2: 'is Awesome',col3:'ETH' },\r\n//     { id: 3, col1: 'MUI', col2: 'is Amazing',col3:'ETH' }\r\n\r\n// ];\r\n","export function toTenThousand(num) {\r\n  if (num >= 10000 && num <1000000) {\r\n    return (num / 10000).toFixed(2) + \"萬\";\r\n  }\r\n  else if (num >= 1000000) {\r\n    return (num / 1000000).toFixed(2) + \"百萬\";\r\n  }\r\n  else return num.toFixed(2);\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../../modules/_redux/DashboardActions\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nimport { Card, Stack } from \"@mui/material\";\r\n\r\nimport { PieChart } from \"../../Charts/Nivo/PieChart\";\r\nimport MuiCard from \"../../Charts/Mui/MuiCard\";\r\nimport { BarChartYaxisOutSide } from \"../../Charts/Apexchart/BarChartYaxisOutSide\";\r\nimport { NFTRichDataGrid } from \"./components/NFTRichDataGrid\";\r\nimport { toTenThousand } from \"../../components/toTenThousand\";\r\n\r\nexport function OverviewPage() {\r\n  const [county, setCounty] = useState([]);\r\n  const [gender, setGender] = useState([]);\r\n  const [nickName, setNickName] = useState([]);\r\n  const [collection, setCollection] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    gender_ratio,\r\n    city_ratio,\r\n    card_data,\r\n    collection_ranking,\r\n    member_ranking_by_total_usd,\r\n  } = useSelector(\r\n    (state) => ({\r\n      gender_ratio: state.dashboard.gender_ratio,\r\n      city_ratio: state.dashboard.city_ratio,\r\n      card_data: state.dashboard.card_data,\r\n      collection_ranking: state.dashboard.collection_ranking,\r\n      member_ranking_by_total_usd: state.dashboard.member_ranking_by_total_usd,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.get_gender_ratio());\r\n    dispatch(actions.get_city_ratio());\r\n    dispatch(actions.get_card_data());\r\n    dispatch(actions.get_collection_ranking());\r\n    dispatch(actions.get_member_ranking_by_total_usd());\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"false\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={3}>\r\n            <Stack spacing={2}>\r\n              <Card raised={true} sx={{ height: \"43.5vh\", color: \"#fed0d0\" }}>\r\n                <PieChart\r\n                  data={city_ratio?city_ratio : []}\r\n                  title={\"縣市比\"}\r\n                  titleColors={\"\"}\r\n                  colors={[\"#f73d31\", \"#fb814e\", \"#fbd4b5\", \"#f7918a\"]}\r\n                  height={\"90%\"}\r\n                  textColor={\"#fff\"}\r\n                  setValue={setCounty}\r\n                />\r\n              </Card>\r\n              <Card raised={true} sx={{ height: \"43.5vh\", color: \"#f9dd6f\" }}>\r\n                <PieChart\r\n                  data={gender_ratio?gender_ratio : []}\r\n                  title={\"男女比\"}\r\n                  titleColors={\"\"}\r\n                  colors={[\"#f8c7fd\",\"#95cdd1\" ]}\r\n                  height={\"90%\"}\r\n                  textColor={\"#362c6f\"}\r\n                  setValue={setGender}\r\n                />\r\n              </Card>\r\n            </Stack>\r\n          </Grid>\r\n\r\n          <Grid item container xs={9} spacing={2} alignItems=\"stretch\">\r\n            <Grid item xs={3}>\r\n              <MuiCard\r\n                height={\"19vh\"}\r\n                title={card_data?card_data[0].title:''}\r\n                value={card_data?card_data[0].value:''}\r\n                cardColor={\"#f5644d\"}\r\n                titleColor={\"#252423\"}\r\n                valueColor={\"#252423\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <MuiCard\r\n                height={\"19vh\"}\r\n                title={card_data?card_data[1].title:''}\r\n                value={card_data?toTenThousand(card_data[1].value):''}\r\n                cardColor={\"#f5644d\"}\r\n                titleColor={\"#252423\"}\r\n                valueColor={\"#252423\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <MuiCard\r\n                height={\"19vh\"}\r\n                title={card_data?card_data[2].title:''}\r\n                value={card_data?toTenThousand(card_data[2].value):''}\r\n                cardColor={\"#f5644d\"}\r\n                titleColor={\"#252423\"}\r\n                valueColor={\"#252423\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={3}>\r\n              <MuiCard\r\n                height={\"19vh\"}\r\n                title={card_data?card_data[3].title:''}\r\n                value={card_data?toTenThousand(card_data[3].value):''}\r\n                cardColor={\"#f5644d\"}\r\n                titleColor={\"#252423\"}\r\n                valueColor={\"#252423\"}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={7.5}>\r\n              <Card raised={true} sx={{ height: \"68vh\" }}>\r\n                <NFTRichDataGrid\r\n                rows={member_ranking_by_total_usd?member_ranking_by_total_usd:{}}\r\n                  title={\"錢包\"}\r\n                  titleColors={\"#f7b2bc\"}\r\n                  setValue={setNickName}\r\n                />\r\n              </Card>\r\n            </Grid>\r\n            <Grid item xs={4.5}>\r\n              <Card raised={true} sx={{ height: \"68vh\" }}>\r\n                <Card raised={true} sx={{ height: \"90vh\" }}>\r\n                  <BarChartYaxisOutSide\r\n                    data={collection_ranking?.count.slice(0,19)  || []}\r\n                    dataName={collection_ranking?.collectionName.slice(0,19) || []}\r\n                    title={\"持有Collection排行\"}\r\n                    titleColors={\"#ff81a2\"}\r\n                    colors={[\"#e7274e\", \"#fe5f76\"]}\r\n                    height={\"75%\"}\r\n                    stacked={false}\r\n                    distributed={true}\r\n                    setValue={setCollection}\r\n                  />\r\n                </Card>\r\n              </Card>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Avatar, Box } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\nconst other = {\r\n  // autoHeight: true,\r\n  showCellRightBorder: true,\r\n  showColumnRightBorder: true,\r\n};\r\n\r\nexport function CollectionDataGrid({ rows,setValue }) {\r\n\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: 1,\r\n          height:\"100%\",\r\n          \"& .color-header\": {\r\n            backgroundColor: \"#ff7900\",\r\n            fontSize: \"2.5vmin\",\r\n          },\r\n          overflow:false\r\n        }}\r\n      >\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          getRowHeight={() => 'auto'} \r\n          onCellClick={(params, event) => {\r\n            if (!event.ctrlKey) {\r\n              setValue(params.row.info.collectionName)\r\n            }\r\n          }}\r\n          onCellDoubleClick={(params, event) => {\r\n            const openInNewTab = url => {\r\n              window.open(url, '_blank', 'noopener,noreferrer');\r\n            };\r\n            let webside=params.value.collectionWebSite\r\n            if (!event.ctrlKey) {\r\n              // console.log(params)\r\n              openInNewTab(webside)\r\n            }\r\n          }}\r\n          {...other}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  \r\n  {\r\n    field: \"info\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"Collection\", \r\n    flex: 1,\r\n    // minWidth: 440,\r\n    headerAlign: 'center' ,\r\n    renderCell: (params) => {\r\n    let  url=params.value.collectionWebSite\r\n      return (\r\n        <>\r\n          <Avatar src={params.value.collectionImageUrl}  sx={{ width: 100, height: 100 ,m:1}} variant=\"rounded\" />\r\n          <IconButton\r\n            color=\"warning\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            onClick={()=>{\r\n              window.open(url, '_blank', 'noopener,noreferrer')\r\n            }}\r\n          >\r\n            <LinkIcon />\r\n          </IconButton>\r\n          <Box sx={{ml:0.5,fontSize:\"20px\"}}>{params.value.collectionName}</Box>\r\n         \r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"count\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"NFT\",\r\n    type: 'number', \r\n    flex: 0.3,\r\n    headerAlign: 'center' ,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ml:2,fontSize:\"20px\"}}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Avatar, Box } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport LinkIcon from '@mui/icons-material/Link';\r\n\r\nconst other = {\r\n  // autoHeight: true,\r\n  showCellRightBorder: true,\r\n  showColumnRightBorder: true,\r\n};\r\n\r\nexport function ETHDataGrid({ rows, setValue }) {\r\n  console.log(rows)\r\n  return (\r\n    <>\r\n      <Box\r\n        sx={{\r\n          width: 1,\r\n          height: \"100%\",\r\n          \"& .color-header\": {\r\n            backgroundColor: \"#e74000\",\r\n            fontSize: \"2.5vmin\",\r\n          },\r\n          overflow: true,\r\n        }}\r\n      >\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          getRowHeight={() => \"auto\"}\r\n          onCellClick={(params, event) => {\r\n            if (!event.ctrlKey) {\r\n              setValue(params.row.item);\r\n            }\r\n          }}\r\n          onCellDoubleClick={(params, event) => {\r\n            const openInNewTab = (url) => {\r\n              window.open(url, \"_blank\", \"noopener,noreferrer\");\r\n            };\r\n            if (!event.ctrlKey) {\r\n              // openInNewTab('https://yahoo.com.tw')\r\n            }\r\n            // console.log(params.row.itemWebSite)\r\n            let webside = params.row.itemWebSite;\r\n            if (!event.ctrlKey) {\r\n              openInNewTab(webside);\r\n            }\r\n          }}\r\n          {...other}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  {\r\n    field: \"item_name\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"Item\",\r\n    minWidth: 270,\r\n    flex: 1,\r\n    headerAlign: \"center\",\r\n    renderCell: (params) => {\r\n      let  url=params.row.itemWebSite\r\n      return (\r\n        <>\r\n         <IconButton\r\n            color=\"warning\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            onClick={()=>{\r\n              window.open(url, '_blank', 'noopener,noreferrer')\r\n            }}\r\n          >\r\n            <LinkIcon />\r\n          </IconButton>\r\n          <Box sx={{ overflowX: \"clip\", ml: 0.5, fontSize: \"20px\" }}>\r\n            {params.value}\r\n          </Box>\r\n         \r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"imageUrl\",\r\n    headerName: \"Image\",\r\n    headerClassName: \"color-header\",\r\n    minWidth: 290,\r\n    // flex: 1,\r\n    headerAlign: \"center\",\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Avatar\r\n            src={params.value}\r\n            sx={{ width: \"100%\", height: \"100%\" }}\r\n            variant=\"rounded\"\r\n          />\r\n        </>\r\n      );\r\n    },\r\n  },\r\n\r\n  {\r\n    field: \"ethBalance\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"ETH\",\r\n    flex: 1,\r\n    headerAlign: \"center\",\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ ml: 2, fontSize: \"20px\" }}>{params.value} ETH</Box>\r\n        </>\r\n      );\r\n    },\r\n    type: \"number\",\r\n  },\r\n  // {\r\n  //   field: \"col4\",\r\n  //   headerClassName: \"color-header\",\r\n  //   headerName: \".\",\r\n  //   width: 140,\r\n  //   renderCell: (params) => {\r\n  //     console.log(params);\r\n  //     return (\r\n  //       <>\r\n  //         ETH\r\n  //       </>\r\n  //     );\r\n  //   },\r\n  // },\r\n];\r\n\r\n// const rows = [\r\n//   {\r\n//     id: 1,\r\n//     item: \"Crazy Lizard Army #880\",\r\n//     image:\r\n//         \"https://lh3.googleusercontent.com/d1eEcyYeqdKdu055SbieNUSpI_9zzuhQ-g9wYId91V6BljVdCCpWQGVJXP-jyWiMf3r7De0je5ZqAmRNaICN0-pKFHl7fpXsiNryvtA=w600\",\r\n\r\n//     eth: \"1.75\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     item: \"Crazy Lizard Army #1755\",\r\n//     image:\r\n//         \"https://lh3.googleusercontent.com/nuUBOSR0ac6GwTs3ZEUXeMzdOLxCIHy6S1VDYLPLuLFhe9Lvn01qbr9-WgnZqImrcG_Y8JMmWdQkS8LrKfhOmYQ-OTehkoH-MogPVw=w600\",\r\n\r\n//     eth: \"1.65\",\r\n//   },\r\n//   {\r\n//     id: 3,\r\n//     item: \"Crazy Lizard Army #1133\",\r\n//     image:\r\n//         \"https://lh3.googleusercontent.com/R5QTso3CKtvuTQilnr1Lm_VsstzbDofFjLeRD9EN2vYzMA5TAieyPTGpP1yGegcpDCZWkNHmvsBOKMrzndi8batjejFO254v5Ic-=w600\",\r\n\r\n//     eth: \"1.50\",\r\n//   },\r\n//   {\r\n//     id: 4,\r\n//     item: \"Crazy Lizard Army #1869\",\r\n//     image:\r\n//         \"https://lh3.googleusercontent.com/HftscurRv8ZRHCwdbnE-d8-p_sc5L5Wbw-I8k-NExLIsTa0rNCNsLqYCpzBisccU-cLkPZtmpqAW9JGcTS5SG8LPBU7pTyPhas7ryw=w600\",\r\n\r\n//     eth: \"0.80\",\r\n//   },\r\n//   {\r\n//     id: 5,\r\n//     item: \"Crazy Lizard Army #5259\",\r\n//     image:\r\n//         \"https://lh3.googleusercontent.com/rAm7aXpZzv0UG6XHQFpNCEpoNkFYMNWjAgL-M6v0eYWba-vOE_hae9YdjNN8Yvpu75PFtUiZQOb_DHIfAqHW3TRRpA8K-WAFLapr=w600\",\r\n\r\n//     eth: \"0.70\",\r\n//   },\r\n// ];\r\n","import React, { useEffect, useState } from \"react\";\r\nimport TextField from '@mui/material/TextField';\r\nimport Autocomplete from '@mui/material/Autocomplete';\r\nimport { CardContent, Typography } from '@mui/material';\r\n\r\n\r\nexport function MuiAutocomplete({inputValue,setInputValue,nickName,memberId,setCollection, setValue}) {\r\nconst options=[\"全部\"]\r\nnickName.map((res)=>{\r\noptions.push(res)\r\n})\r\n\r\n  useEffect(()=>{\r\n    if(inputValue){\r\n      setValue(memberId[nickName.indexOf(inputValue)])\r\n      setCollection(\"all\")\r\n    }  \r\n    if(!inputValue||inputValue==\"全部\"){\r\n      setValue(\"all\")\r\n      setCollection(\"all\")\r\n    }\r\n  },[inputValue])\r\n  \r\n  return (\r\n    <>\r\n    <CardContent>\r\n         <Typography sx={{ fontSize: \"3vmin\",color:\"#fff\",fontWeight:\"bold\" }} >\r\n        會員名稱\r\n        </Typography>\r\n      <Autocomplete\r\n        value={inputValue}\r\n        onChange={(event, newValue) => {\r\n          setInputValue(newValue)\r\n        }}\r\n        id=\"controllable-states-demo\"\r\n        options={options}\r\n        sx={{ width: \"100%\",mt:2 }}\r\n        renderInput={(params) => <TextField {...params}  />}\r\n      /> \r\n    </CardContent>\r\n   \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../../modules/_redux/DashboardActions\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nimport { Card } from \"@mui/material\";\r\n\r\nimport MuiCard from \"../../Charts/Mui/MuiCard\";\r\nimport { BarChartYaxisOutSide } from \"../../Charts/Apexchart/BarChartYaxisOutSide\";\r\nimport { CollectionDataGrid } from \"./components/CollectionDataGrid\";\r\nimport { ETHDataGrid } from \"./components/ETHDataGrid\";\r\nimport { MuiAutocomplete } from \"../../components/MuiAutocomplete\";\r\nimport { toTenThousand } from \"../../components/toTenThousand\";\r\n\r\nexport function NFTProportionPage() {\r\n  const [memberId, setMemberId] = useState(\"all\");\r\n  const [nickName, setNickName] = useState(\"全部\");\r\n  const [collection, setCollection] = useState(\"all\");\r\n  const [item, setItem] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    card_data,\r\n    member_nft_value,\r\n    member_ranking_by_holding_nfts,\r\n    nft_member_list,\r\n    someone_collections,\r\n    someone_collection_items,\r\n  } = useSelector(\r\n    (state) => ({\r\n      card_data: state.dashboard.card_data,\r\n      member_nft_value: state.dashboard.member_nft_value,\r\n      member_ranking_by_holding_nfts:\r\n        state.dashboard.member_ranking_by_holding_nfts,\r\n        nft_member_list: state.dashboard.nft_member_list,\r\n      someone_collections: state.dashboard.someone_collections,\r\n      someone_collection_items: state.dashboard.someone_collection_items,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.get_card_data());\r\n    dispatch(actions.get_member_nft_value({ member_id: memberId }));\r\n    dispatch(actions.get_member_ranking_by_holding_nfts());\r\n    dispatch(actions.get_nft_member_list());\r\n    dispatch(actions.get_someone_collections({ member_id: memberId }));\r\n    dispatch(\r\n      actions.get_someone_collection_items({\r\n        member_id: memberId,\r\n        collection: collection,\r\n      })\r\n    );\r\n  }, [memberId, collection]);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"false\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4.5}>\r\n            <Card\r\n              sx={{ height: \"17vh\", fontSize: \"1.5vw\", bgcolor: \"#717bc5\" }}\r\n            >\r\n              <MuiAutocomplete\r\n                inputValue={nickName}\r\n                setInputValue={setNickName}\r\n                nickName={nft_member_list?.nickname || []}\r\n                memberId={nft_member_list?.id || []}\r\n                setCollection={setCollection}\r\n                setValue={setMemberId}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={card_data ? card_data[4].title : \"\"}\r\n              value={\r\n                !(card_data && member_nft_value)\r\n                  ? \"\"\r\n                  : member_nft_value.id == \"all\"\r\n                  ? card_data[4].value\r\n                  : member_nft_value.count + \"／\" + card_data[4].value\r\n              }\r\n              cardColor={\"#51369f\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#abfaff\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={card_data ? card_data[5].title : \"\"}\r\n              value={\r\n                member_nft_value\r\n                  ? toTenThousand(member_nft_value.ethBalance)\r\n                  : \"\"\r\n              }\r\n              cardColor={\"#51369f\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#abfaff\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={card_data ? card_data[6].title : \"\"}\r\n              value={\r\n                member_nft_value ? toTenThousand(member_nft_value.usd) : \"\"\r\n              }\r\n              cardColor={\"#51369f\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#abfaff\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n              <Card raised={true} sx={{ height: \"90vh\", bgcolor: \"#362f73\" }}>\r\n                <BarChartYaxisOutSide\r\n                  data={member_ranking_by_holding_nfts?.count || []}\r\n                  dataName={member_ranking_by_holding_nfts?.nickname || []}\r\n                  title={\"持有NFT數量\"}\r\n                  titleColors={\"#90d4d8\"}\r\n                  colors={[\"#90d4d8\"]}\r\n                  height={\"75%\"}\r\n                  stacked={false}\r\n                  distributed={true}\r\n                  value={nickName}\r\n                  setValue={setNickName}\r\n                />\r\n              </Card>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={4}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n              <CollectionDataGrid\r\n                rows={someone_collections ? someone_collections : {}}\r\n                setValue={setCollection}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={5}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n              {/* <ETHTable\r\n                data={\r\n                  (donate_information &&\r\n                    donate_information.price_vs_payfee?.details) ||\r\n                  []\r\n                }\r\n                titleColors={\"#ff7900\"}\r\n                 setValue={setItem}\r\n              /> */}\r\n              <ETHDataGrid\r\n                rows={someone_collection_items ? someone_collection_items : {}}\r\n                setValue={setItem}\r\n              />\r\n              {/* <ETHImageList/> */}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { DataGrid } from \"@mui/x-data-grid\";\r\nimport { Avatar, Box } from \"@mui/material\";\r\nimport IconButton from \"@mui/material/IconButton\";\r\nimport LinkIcon from '@mui/icons-material/Link';\r\nimport { TitleTypography } from \"../../../Charts/Mui/TitleTypography\";\r\n\r\nconst other = {\r\n  // autoHeight: true,\r\n  showCellRightBorder: true,\r\n  showColumnRightBorder: true,\r\n};\r\n\r\nexport function CryptoDataGrid({ rows,title, titleColors,setValue }) {\r\nconsole.log(rows)\r\n  return (\r\n    <>\r\n    <TitleTypography title={title} titleColors={titleColors} />\r\n      <Box\r\n        sx={{\r\n          width: 1,\r\n          height:\"100%\",\r\n          \"& .color-header\": {\r\n            backgroundColor: \"#503CD5\",\r\n            fontSize: \"2vmin\",\r\n          },\r\n          overflow:false\r\n        }}\r\n      >\r\n        <DataGrid\r\n          rows={rows}\r\n          columns={columns}\r\n          getRowHeight={() => 'auto'} \r\n          // onCellClick={(params, event) => {\r\n          //   if (!event.ctrlKey) {\r\n          //     setValue(params.row.info.collectionName)\r\n          //   }\r\n          // }}\r\n          // onCellDoubleClick={(params, event) => {\r\n          //   const openInNewTab = url => {\r\n          //     window.open(url, '_blank', 'noopener,noreferrer');\r\n          //   };\r\n          //   let webside=params.value.collectionWebSite\r\n          //   if (!event.ctrlKey) {\r\n          //     // console.log(params)\r\n          //     openInNewTab(webside)\r\n          //   }\r\n          // }}\r\n          {...other}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nconst columns = [\r\n  \r\n  {\r\n    field: \"info\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"貨幣\", \r\n    flex: 1,\r\n    // minWidth: 440,\r\n    headerAlign: 'center' ,\r\n    renderCell: (params) => {\r\n    let  url=params.value.collectionWebSite\r\n      return (\r\n        <>\r\n          <Avatar src={params.value.imageUrl}  sx={{ width: 60, height: 60 ,m:2}} variant=\"rounded\" />\r\n          {/* <IconButton\r\n            color=\"warning\"\r\n            aria-label=\"upload picture\"\r\n            component=\"span\"\r\n            onClick={()=>{\r\n              window.open(url, '_blank', 'noopener,noreferrer')\r\n            }}\r\n          >\r\n            <LinkIcon />\r\n          </IconButton> */}\r\n          {/* <Box sx={{ml:0.5,fontSize:\"20px\"}}>{params.value.name}</Box> */}\r\n          <Box sx={{ml:0.5,fontSize:\"20px\"}}>{params.value.symbol}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    field: \"count\",\r\n    headerClassName: \"color-header\",\r\n    headerName: \"數量\",\r\n    type: 'number', \r\n    flex: 0.5,\r\n    headerAlign: 'center' ,\r\n    renderCell: (params) => {\r\n      return (\r\n        <>\r\n          <Box sx={{ml:2,fontSize:\"20px\"}}>{params.value}</Box>\r\n        </>\r\n      );\r\n    },\r\n  },\r\n];\r\n\r\n","import React, { useEffect, useState } from \"react\";\r\nimport * as actions from \"../../modules/_redux/DashboardActions\";\r\nimport { shallowEqual, useDispatch, useSelector } from \"react-redux\";\r\nimport Grid from \"@mui/material/Grid\";\r\nimport Container from \"@mui/material/Container\";\r\n\r\nimport { Card } from \"@mui/material\";\r\n\r\nimport MuiCard from \"../../Charts/Mui/MuiCard\";\r\nimport { BarChartYaxisOutSide } from \"../../Charts/Apexchart/BarChartYaxisOutSide\";\r\n\r\nimport { MuiAutocomplete } from \"../../components/MuiAutocomplete\";\r\nimport { toTenThousand } from \"../../components/toTenThousand\";\r\nimport { PieChart } from \"../../Charts/Nivo/PieChart\";\r\nimport { CryptoDataGrid } from \"./components/CryptoDataGrid\";\r\n\r\nexport function CurrencyPage() {\r\n  const [memberId, setMemberId] = useState(\"all\");\r\n  const [nickName, setNickName] = useState(\"全部\");\r\n  const [collection, setCollection] = useState(\"all\");\r\n  const [item, setItem] = useState([]);\r\n  const [county, setCounty] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const {\r\n    member_crypto_value,\r\n    crypto_member_list,\r\n    member_ranking_by_holding_crypto,\r\n    crypto_ranking,\r\n    someone_crypto_usd,\r\n  } = useSelector(\r\n    (state) => ({\r\n      member_crypto_value: state.dashboard.member_crypto_value,\r\n      crypto_member_list: state.dashboard.crypto_member_list,\r\n      member_ranking_by_holding_crypto: state.dashboard.member_ranking_by_holding_crypto,\r\n      crypto_ranking: state.dashboard.crypto_ranking,\r\n      someone_crypto_usd: state.dashboard.someone_crypto_usd,\r\n    }),\r\n    shallowEqual\r\n  );\r\n\r\n  useEffect(() => {\r\n    dispatch(actions.get_member_crypto_value({ member_id: memberId }));\r\n    dispatch(actions.get_crypto_member_list());\r\n    dispatch(actions.get_member_ranking_by_holding_crypto());\r\n     dispatch(actions.get_crypto_ranking({ member_id: memberId }));\r\n    dispatch(actions.get_someone_crypto_usd({ member_id: memberId }));\r\n  }, [memberId]);\r\n\r\n  return (\r\n    <>\r\n      <Container maxWidth=\"false\">\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={4.5}>\r\n            <Card\r\n              sx={{ height: \"17vh\", fontSize: \"1.5vw\", bgcolor: \"#FC8822\" }}\r\n            >\r\n              <MuiAutocomplete\r\n                inputValue={nickName}\r\n                setInputValue={setNickName}\r\n                nickName={crypto_member_list?.nickname || []}\r\n                memberId={crypto_member_list?.id || []}\r\n                setCollection={setCollection}\r\n                setValue={setMemberId}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={ \"幣種數量\"}\r\n              value={\r\n               member_crypto_value?.count||\"\"\r\n              }\r\n              cardColor={\"#3e51cc\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#FFF86B\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={\"總價值(ETH)\"}\r\n              value={\r\n                member_crypto_value?toTenThousand(member_crypto_value.ethBalance):\"\"\r\n              }\r\n              cardColor={\"#3e51cc\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#FFF86B\"}\r\n            />\r\n          </Grid>\r\n          <Grid item xs={2.5}>\r\n            <MuiCard\r\n              height={\"17vh\"}\r\n              title={\"總價值(美金)\"}\r\n              value={\r\n                member_crypto_value?.usd||\"\"\r\n              }\r\n              cardColor={\"#3e51cc\"}\r\n              titleColor={\"#ffffff\"}\r\n              valueColor={\"#FFF86B\"}\r\n            />\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n              <Card raised={true} sx={{ height: \"90vh\"}}>\r\n                <BarChartYaxisOutSide\r\n                  data={member_ranking_by_holding_crypto?.count || []}\r\n                  dataName={member_ranking_by_holding_crypto?.nickname || []}\r\n                  title={\"持有幣種數量\"}\r\n                  titleColors={\"#FF6B3A\"}\r\n                  colors={[\"#FF6B3A\"]}\r\n                  height={\"75%\"}\r\n                  stacked={false}\r\n                  distributed={true}\r\n                  value={nickName}\r\n                  setValue={setNickName}\r\n                />\r\n              </Card>\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={3}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n            <CryptoDataGrid\r\n                rows={crypto_ranking ? crypto_ranking : {}}\r\n                title={\"熱門持有\"}\r\n                  titleColors={\"#8665FF\"}\r\n                setValue={setCollection}\r\n              />\r\n            </Card>\r\n          </Grid>\r\n\r\n          <Grid item xs={6}>\r\n            <Card raised={true} sx={{ height: \"70vh\" }}>\r\n            {/* <Card raised={true} sx={{ height: \"43.5vh\", color: \"#fed0d0\" }}> */}\r\n                <PieChart\r\n                  data={someone_crypto_usd?someone_crypto_usd : []}\r\n                  title={\"幣種分布\"}\r\n                  titleColors={\"#3C6BEC\"}\r\n                  // colors={[\"#f73d31\", \"#fb814e\", \"#fbd4b5\", \"#f7918a\"]}\r\n                  colors={{ scheme: 'set3' }}\r\n                  height={\"90%\"}\r\n                  textColor={\"#fff\"}\r\n                  setValue={setCounty}\r\n                />\r\n              {/* </Card> */}\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\";\n\nimport { Provider } from \"react-redux\";\nimport { styled } from \"@mui/system\";\nimport TabPanelUnstyled from \"@mui/base/TabPanelUnstyled\";\nimport TabsUnstyled from \"@mui/base/TabsUnstyled\";\nimport TabsListUnstyled from \"@mui/base/TabsListUnstyled\";\n// import { OverviewPage } from \"./page/overview/OverviewPage\";\n// import { YearPage } from \"./page/year/YearPage\";\nimport { MaterialThemeProvider } from \"../_core/MaterialThemeProvider \";\nimport TabUnstyled, { tabUnstyledClasses } from \"@mui/base/TabUnstyled\";\nimport { buttonUnstyledClasses } from \"@mui/base/ButtonUnstyled\";\nimport {  CssBaseline, Typography } from \"@mui/material\";\n// import { MyCardPointsPage } from \"../../page/add-value/MyCardPointsPage\";\nimport { OverviewPage } from \"../../pages/overviewPage/OverviewPage\";\nimport { NFTProportionPage } from \"../../pages/proportionPage/NFTProportionPage\";\nimport { CurrencyPage } from \"../../pages/currencyPage/CurrencyPage\";\n\nconst blue = {\n  50: \"#F0F7FF\",\n  100: \"#C2E0FF\",\n  200: \"#80BFFF\",\n  300: \"#66B2FF\",\n  400: \"#3399FF\",\n  500: \"#007FFF\",\n  600: \"#0072E5\",\n  700: \"#0059B2\",\n  800: \"#004C99\",\n  900: \"#003A75\",\n};\nconst Title = styled(Typography)`\n  font-size: 2vw;\n  font-weight: 600;\n  margin: 0px 18px;\n  color: #ff9016;\n  text-shadow: 2px 2px 3px #444445;\n`;\n\nconst Tab = styled(TabUnstyled)`\n  font-family: IBM Plex Sans, sans-serif;\n  color: white;\n  cursor: pointer;\n  font-size: 1.5vw;\n  font-weight: 600;\n  background-color: transparent;\n  width: 10%;\n  padding: 1.2vmin 1vmin;\n  margin: 0px 0px;\n  margin-top: 1vh;\n  margin-bottom: 1vh;\n  border: none;\n  border-radius: 0px;\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    background-color: #121212;\n    color:#fa7721;\n    font-weight: 600;\n    border-radius: 8px 8px 8px 8px;\n  }\n\n  &.${buttonUnstyledClasses.focusVisible} {\n    color: #fff;\n    outline: none;\n    background-color: ${blue[200]};\n  }\n\n  &.${tabUnstyledClasses.selected} {\n    background-color: #fff;\n    color: #000;\n    font-weight: 600;\n    border-radius: 8px 8px 8px 8px;\n  }\n\n  &.${buttonUnstyledClasses.disabled} {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\n\nconst TabPanel = styled(TabPanelUnstyled)`\n  width: 100%;\n  height: 100%;\n  font-family: IBM Plex Sans, sans-serif;\n  font-size: 0.875rem;\n  padding: 1vmin 5px;\n  margin: 2px 0px;\n`;\n\nconst TabsList = styled(TabsListUnstyled)`\n  min-width: 100%;\n  background-color: #121212;\n  border-radius: 0px;\n  display: flex;\n  align-items: center;\n  justify-content: flex-start;\n  align-content: space-between;\n`;\n\nexport default function SimpleTabs({ store }) {\n  return (\n    <Provider store={store}>\n      <TabsUnstyled defaultValue={1}>\n        <TabsList>\n          <Title>沙漠魚會員分析Dashboard</Title>\n          {/* <Title>AIV活動後台DASHBOARD</Title> */}\n          <Tab>總覽</Tab>\n          <Tab>NFT占比</Tab>\n          <Tab>所有幣種</Tab>\n        </TabsList>\n\n        <MaterialThemeProvider>\n          <CssBaseline />\n          <TabPanel value={1}>\n            <OverviewPage/>\n          </TabPanel>\n          <TabPanel value={2}>\n          <NFTProportionPage/>\n          </TabPanel>\n          <TabPanel value={3}>\n          <CurrencyPage/>\n          </TabPanel>\n        </MaterialThemeProvider>\n      </TabsUnstyled>\n    </Provider>\n  );\n}\n","import { all } from \"redux-saga/effects\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nimport { DashboardSlice } from \"../_redux/DashboardSlice\";\r\n\r\nexport const rootReducer = combineReducers({\r\n\r\n\r\n  dashboard:DashboardSlice.reducer\r\n});\r\n\r\nexport function* rootSaga() {}\r\n","import {configureStore, getDefaultMiddleware} from \"@reduxjs/toolkit\";\r\nimport createSagaMiddleware from \"redux-saga\";\r\nimport {reduxBatch} from \"@manaflair/redux-batch\";\r\nimport {persistStore} from \"redux-persist\";\r\nimport {rootReducer, rootSaga} from \"./rootReducer\";\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    immutableCheck: false,\r\n    serializableCheck: false,\r\n    thunk: true\r\n  }),\r\n  sagaMiddleware\r\n];\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  middleware,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n  enhancers: [reduxBatch]\r\n});\r\n\r\n/**\r\n * @see https://github.com/rt2zz/redux-persist#persiststorestore-config-callback\r\n * @see https://github.com/rt2zz/redux-persist#persistor-object\r\n */\r\nexport const persistor = persistStore(store);\r\n\r\nsagaMiddleware.run(rootSaga);\r\n\r\nexport default store;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport Layout from \"./app/layout/components/Layout\";\nimport store from \"./app/modules/redux/store\"\nimport reportWebVitals from \"./reportWebVitals\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <Layout store={store} />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}